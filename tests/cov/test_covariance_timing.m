function test_covariance_timing(covariance, sizes, D, num_runs, varargin)

  name = functions(covariance);
  name = name.function;
  
  eval(['GPMLcovariance = @GPML' name ';']);

  num_hyp = eval(feval(covariance));
  hyp = rand(num_hyp, 1);
  
  disp('testing timing');

  for size = sizes
    x = rand(size, D);
    
    tic;
    for i = 1:num_runs
      K = covariance(varargin{:}, hyp, x);
    end
    compiled_elapsed = toc;
    disp(['size '...
          num2str(size) ...
          ', average time to calculate compiled covariance (K = ' ...
          name ...
          '(hyp, x), ' ...
          num2str(num_runs) ...
          ' runs) = ' ...
          num2str(compiled_elapsed / num_runs) 's.']);
    
    for i = 1:num_runs
      K = GPMLcovariance(varargin{:}, hyp, x);
    end
    gpml_elapsed = toc;
    disp(['size '...
          num2str(size) ...
          ', average time to calculate GPML covariance (K = ' ...
          'GPML' name ...
          '(hyp, x), ' ...
          num2str(num_runs) ...
          ' runs) = ' ...
          num2str(gpml_elapsed / num_runs) 's.' ...
         ]);
    
    disp(['   speedup: (GPML time) / (compiled time) ' ...
          num2str(gpml_elapsed / compiled_elapsed) ...
         ]);
  end
end